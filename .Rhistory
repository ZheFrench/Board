),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(d3heatmapOutput("plot1", height = "auto", width = "auto")  )
)
),
# Second tab content
tabItem(tabName = "widgets",
h2("Widgets tab content")
)
)
)
)
server <- function(input, output) {
#set.seed(122)
#histdata <- rnorm(500)
#output$plot1 <- renderPlot({
# data <- histdata[seq_len(input$slider)]
# hist(data)
url <- "http://datasets.flowingdata.com/ppg2008.csv"
output$plot1 <- renderD3heatmap({
nba_players <- read.csv(url, row.names = 1)
d3heatmap(nba_players, scale = "column", dendrogram = "none",cexCol=3)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
library(d3heatmap)
ui <- dashboardPage(
dashboardHeader(title = "IURC dashboard"),
dashboardSidebar(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
menuItem("Widgets", tabName = "widgets", icon = icon("th"))
),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(d3heatmapOutput("plot1",  width = "auto")  )
)
),
# Second tab content
tabItem(tabName = "widgets",
h2("Widgets tab content")
)
)
)
)
server <- function(input, output) {
#set.seed(122)
#histdata <- rnorm(500)
#output$plot1 <- renderPlot({
# data <- histdata[seq_len(input$slider)]
# hist(data)
url <- "http://datasets.flowingdata.com/ppg2008.csv"
output$plot1 <- renderD3heatmap({
nba_players <- read.csv(url, row.names = 1)
d3heatmap(nba_players, scale = "column", dendrogram = "none",cexCol=3)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
library(d3heatmap)
ui <- dashboardPage(
dashboardHeader(title = "IURC Dashboard"),
dashboardSidebar(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard"))
),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(d3heatmapOutput("plot1",  width = "auto")  )
)
)
)
)
)
server <- function(input, output) {
#set.seed(122)
#histdata <- rnorm(500)
#output$plot1 <- renderPlot({
# data <- histdata[seq_len(input$slider)]
# hist(data)
url <- "http://datasets.flowingdata.com/ppg2008.csv"
output$plot1 <- renderD3heatmap({
nba_players <- read.csv(url, row.names = 1)
d3heatmap(nba_players, scale = "column", dendrogram = "none")
})
}
shinyApp(ui = ui, server = server)
?fluidRow
install.packages("heatmap3")
library(shiny)
library(shinydashboard)
library(d3heatmap)
install.packages("heatmap3")
ui <- dashboardPage(
dashboardHeader(title = "IURC Dashboard"),
dashboardSidebar(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard"))
),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1",  width = "auto")  )
)
)
)
)
)
server <- function(input, output) {
#set.seed(122)
#histdata <- rnorm(500)
#output$plot1 <- renderPlot({
# data <- histdata[seq_len(input$slider)]
# hist(data)
url <- "http://datasets.flowingdata.com/ppg2008.csv"
output$plot1 <- renderPlot({
nba_players <- read.csv(url, row.names = 1)
heatmap.3(nba_players, RowSideColors=row_annotation, ColSideColors=column_annotation)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
library(heatmap3)
ui <- dashboardPage(
dashboardHeader(title = "IURC Dashboard"),
dashboardSidebar(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard"))
),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1",  width = "auto")  )
)
)
)
)
)
server <- function(input, output) {
#set.seed(122)
#histdata <- rnorm(500)
#output$plot1 <- renderPlot({
# data <- histdata[seq_len(input$slider)]
# hist(data)
url <- "http://datasets.flowingdata.com/ppg2008.csv"
output$plot1 <- renderPlot({
nba_players <- read.csv(url, row.names = 1)
heatmap.3(nba_players, RowSideColors=row_annotation, ColSideColors=column_annotation)
})
}
shinyApp(ui = ui, server = server)
install.packages("heatmap3")
install.packages("heatmap3")
library(shiny)
library(shinydashboard)
library(heatmap3)
ui <- dashboardPage(
dashboardHeader(title = "IURC Dashboard"),
dashboardSidebar(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard"))
),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1",  width = "auto")  )
)
)
)
)
)
server <- function(input, output) {
url <- "http://datasets.flowingdata.com/ppg2008.csv"
output$plot1 <- renderPlot({
nba_players <- read.csv(url, row.names = 1)
heatmap3(nba_players, RowSideColors=row_annotation, ColSideColors=column_annotation)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
library(heatmap3)
ui <- dashboardPage(
dashboardHeader(title = "IURC Dashboard"),
dashboardSidebar(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard"))
),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1",  width = "auto")  )
)
)
)
)
)
server <- function(input, output) {
url <- "http://datasets.flowingdata.com/ppg2008.csv"
output$plot1 <- renderPlot({
nba_players <- read.csv(url, row.names = 1)
heatmap3(nba_players)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
library(heatmap3)
ui <- dashboardPage(
dashboardHeader(title = "IURC Dashboard"),
dashboardSidebar(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard"))
),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1",  width = "auto")  )
)
)
)
)
)
server <- function(input, output) {
url <- "http://datasets.flowingdata.com/ppg2008.csv"
output$plot1 <- renderPlot({
# EXAMPLE USAGE
# example of colsidecolors rowsidecolors (single column, single row)
mat <- matrix(1:100, byrow=T, nrow=10)
column_annotation <- sample(c("red", "blue", "green"), 10, replace=T)
column_annotation <- as.matrix(column_annotation)
colnames(column_annotation) <- c("Variable X")
row_annotation <- sample(c("red", "blue", "green"), 10, replace=T)
row_annotation <- as.matrix(t(row_annotation))
rownames(row_annotation) <- c("Variable Y")
heatmap.3(mat, RowSideColors=row_annotation, ColSideColors=column_annotation)
# multiple column and row
mat <- matrix(1:100, byrow=T, nrow=10)
column_annotation <- matrix(sample(c("red", "blue", "green"), 20, replace=T), ncol=2)
colnames(column_annotation) <- c("Variable X1", "Variable X2")
row_annotation <- matrix(sample(c("red", "blue", "green"), 20, replace=T), nrow=2)
rownames(row_annotation) <- c("Variable Y1", "Variable Y2")
heatmap.3(mat, RowSideColors=row_annotation, ColSideColors=column_annotation)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
library(heatmap3)
ui <- dashboardPage(
dashboardHeader(title = "IURC Dashboard"),
dashboardSidebar(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard"))
),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1",  width = "auto")  )
)
)
)
)
)
server <- function(input, output) {
url <- "http://datasets.flowingdata.com/ppg2008.csv"
output$plot1 <- renderPlot({
# EXAMPLE USAGE
# example of colsidecolors rowsidecolors (single column, single row)
mat <- matrix(1:100, byrow=T, nrow=10)
column_annotation <- sample(c("red", "blue", "green"), 10, replace=T)
column_annotation <- as.matrix(column_annotation)
colnames(column_annotation) <- c("Variable X")
row_annotation <- sample(c("red", "blue", "green"), 10, replace=T)
row_annotation <- as.matrix(t(row_annotation))
rownames(row_annotation) <- c("Variable Y")
heatmap.3(mat, RowSideColors=row_annotation, ColSideColors=column_annotation)
# multiple column and row
mat <- matrix(1:100, byrow=T, nrow=10)
column_annotation <- matrix(sample(c("red", "blue", "green"), 20, replace=T), ncol=2)
colnames(column_annotation) <- c("Variable X1", "Variable X2")
row_annotation <- matrix(sample(c("red", "blue", "green"), 20, replace=T), nrow=2)
rownames(row_annotation) <- c("Variable Y1", "Variable Y2")
heatmap3(mat, RowSideColors=row_annotation, ColSideColors=column_annotation)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
library(heatmap3)
ui <- dashboardPage(
dashboardHeader(title = "IURC Dashboard"),
dashboardSidebar(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard"))
),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1",  width = "auto")  )
)
)
)
)
)
server <- function(input, output) {
url <- "http://datasets.flowingdata.com/ppg2008.csv"
output$plot1 <- renderPlot({
# EXAMPLE USAGE
# example of colsidecolors rowsidecolors (single column, single row)
mat <- matrix(1:100, byrow=T, nrow=10)
column_annotation <- sample(c("red", "blue", "green"), 10, replace=T)
column_annotation <- as.matrix(column_annotation)
colnames(column_annotation) <- c("Variable X")
row_annotation <- sample(c("red", "blue", "green"), 10, replace=T)
row_annotation <- as.matrix(t(row_annotation))
rownames(row_annotation) <- c("Variable Y")
heatmap3(mat, RowSideColors=row_annotation, ColSideColors=column_annotation)
})
}
shinyApp(ui = ui, server = server)
example(heatmap3)
heatmap3?
?heatmap3
?heatmap3
install.packages(heatmap.2)
install.packages(gplots)
install.packages(ggplot2)
install.packages(ggplot2)
install.packages("heatmap.2")
install.packages("heatmap.3")
library(shiny)
library(shinydashboard)
library(d3heatmap)
ui <- dashboardPage(
dashboardHeader(title = "IURC Dashboard"),
dashboardSidebar(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard"))
),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(d3heatmapOutput("plot1",  width = "auto")  )
)
)
)
)
)
server <- function(input, output) {
url <- "http://datasets.flowingdata.com/ppg2008.csv"
output$plot1 <- renderD3heatmap({
# EXAMPLE USAGE
url <- "http://datasets.flowingdata.com/ppg2008.csv"
nba_players <- read.csv(url, row.names = 1)
d3heatmap(nba_players, scale = "column")
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
library(d3heatmap)
ui <- dashboardPage(
dashboardHeader(title = "IURC Dashboard"),
dashboardSidebar(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard"))
),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(d3heatmapOutput("plot1",  width = "auto")  )
)
)
)
)
)
server <- function(input, output) {
url <- "http://datasets.flowingdata.com/ppg2008.csv"
output$plot1 <- renderD3heatmap({
# EXAMPLE USAGE
url <- "http://datasets.flowingdata.com/ppg2008.csv"
nba_players <- read.csv(url, row.names = 1)
d3heatmap(nba_players, scale = "column")
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
library(d3heatmap)
ui <- dashboardPage(
dashboardHeader(title = "IURC Dashboard"),
dashboardSidebar(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard"))
),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(d3heatmapOutput("plot1",  width = "auto")  )
)
)
)
)
)
server <- function(input, output) {
url <- "http://datasets.flowingdata.com/ppg2008.csv"
output$plot1 <- renderD3heatmap({
# EXAMPLE USAGE
colors = c(seq(-3,-2,length=100),seq(-2,0.5,length=100),seq(0.5,6,length=100))
my_palette <- colorRampPalette(c("red", "black", "green"))(n = 299)
url <- "http://datasets.flowingdata.com/ppg2008.csv"
nba_players <- read.csv(url, row.names = 1)
d3heatmap(nba_players, col=my_palette,
breaks=colors, symm=F,symkey=F,symbreaks=T, scale="none")
})
}
shinyApp(ui = ui, server = server)
install.packages("shinythemes")
headerPanel_2(
headerPanel_2(
library(shiny)
library(shinydashboard)
library(d3heatmap)
library(shinythemes)
ui <- fluidPage(theme=shinytheme("flatly"),
headerPanel_2(
HTML('Gradient Boosting / Generalized Boosted Regression Models
<a href="http://snap.uaf.edu" target="_blank"><img id="stats_logo" align="right" alt="SNAP Logo" src="./img/SNAP_acronym_100px.png" /></a>'
), h3, "GBM Example"
),
fluidRow(
box(d3heatmapOutput("plot1",  width = "auto")  )
)
)
server <- function(input, output) {
url <- "http://datasets.flowingdata.com/ppg2008.csv"
output$plot1 <- renderD3heatmap({
# EXAMPLE USAGE
colors = c(seq(-3,-2,length=100),seq(-2,0.5,length=100),seq(0.5,6,length=100))
my_palette <- colorRampPalette(c("red", "black", "green"))(n = 299)
url <- "http://datasets.flowingdata.com/ppg2008.csv"
nba_players <- read.csv(url, row.names = 1)
d3heatmap(nba_players, col=my_palette,
breaks=colors, symm=F,symkey=F,symbreaks=T, scale="none")
})
}
shinyApp(ui = ui, server = server)
library(shiny)
#library(shinydashboard)
library(d3heatmap)
library(shinythemes)
ui <- fluidPage(theme=shinytheme("flatly"),
headerPanel_2(
HTML('Gradient Boosting / Generalized Boosted Regression Models
<a href="http://snap.uaf.edu" target="_blank"><img id="stats_logo" align="right" alt="SNAP Logo" src="./img/SNAP_acronym_100px.png" /></a>'
), h3, "GBM Example"
),
fluidRow(
box(d3heatmapOutput("plot1",  width = "auto")  )
)
)
server <- function(input, output) {
url <- "http://datasets.flowingdata.com/ppg2008.csv"
output$plot1 <- renderD3heatmap({
# EXAMPLE USAGE
colors = c(seq(-3,-2,length=100),seq(-2,0.5,length=100),seq(0.5,6,length=100))
my_palette <- colorRampPalette(c("red", "black", "green"))(n = 299)
url <- "http://datasets.flowingdata.com/ppg2008.csv"
nba_players <- read.csv(url, row.names = 1)
d3heatmap(nba_players, col=my_palette,
breaks=colors, symm=F,symkey=F,symbreaks=T, scale="none")
})
}
shinyApp(ui = ui, server = server)
shiny::runApp('Desktop/board')
shiny::runApp('Desktop/board')
